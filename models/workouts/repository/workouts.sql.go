// Code generated by sqlc. DO NOT EDIT.
// source: workouts.sql

package repository

import (
	"context"
)

const createNewWorkout = `-- name: CreateNewWorkout :one
INSERT INTO workouts(workout_name, workout_type)
VALUES(
    $1,
    $2
)
RETURNING id, workout_name, workout_type
`

type CreateNewWorkoutParams struct {
	WorkoutName string
	WorkoutType string
}

func (q *Queries) CreateNewWorkout(ctx context.Context, arg CreateNewWorkoutParams) (Workout, error) {
	row := q.db.QueryRowContext(ctx, createNewWorkout, arg.WorkoutName, arg.WorkoutType)
	var i Workout
	err := row.Scan(&i.ID, &i.WorkoutName, &i.WorkoutType)
	return i, err
}

const deleteWorkout = `-- name: DeleteWorkout :one
DELETE FROM workouts
WHERE id = $1
RETURNING id, workout_name, workout_type
`

func (q *Queries) DeleteWorkout(ctx context.Context, id int32) (Workout, error) {
	row := q.db.QueryRowContext(ctx, deleteWorkout, id)
	var i Workout
	err := row.Scan(&i.ID, &i.WorkoutName, &i.WorkoutType)
	return i, err
}

const getWorkoutByID = `-- name: GetWorkoutByID :one
SELECT id, workout_name, workout_type FROM workouts 
WHERE id = $1
`

func (q *Queries) GetWorkoutByID(ctx context.Context, id int32) (Workout, error) {
	row := q.db.QueryRowContext(ctx, getWorkoutByID, id)
	var i Workout
	err := row.Scan(&i.ID, &i.WorkoutName, &i.WorkoutType)
	return i, err
}
